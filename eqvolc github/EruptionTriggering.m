function EruptionTriggering

% Takes input earthquake and eruption databases and calculates the number
% of eruptions before and after nearby large earthquakes, within a certain
% distance and time period. Also calculates baseline eruption rates. Can
% also use Monte Carlo simulation to randomise the earthquake and eruption
% dates. The output .mat file generated by this script can be used in the
% PlotTriggering.m scripts for visualisation


% INPUT

DB_inpeqs = 'gCMTall2.xlsx'; % Input earthquakes database
DB_inperups = 'GVPall2.xls'; % Input eruptions database

output_name = 'ET_test_1year.mat'; % Name of output file

first_eq = '01/01/1976'; % Start of earthquake catalogue (dd/mm/yyyy) 
first_volc = '01/01/1971'; % Start of eruption catalogue (dd/mm/yyyy - volc catalogue must extend back to at least first_eq - maxt)
last_volc = '31/12/2020'; % End of eruption catalogue (dd/mm/yyyy) 

lonlims = [-180 180]; % Study area longitutude ([min max] or [polygon vertices]) (-180 to 180) (minimum='left' side of area, maximum='right' side of area)
latlims = [-90 90]; % Study are latitude ([min max] or [polygon vertices]) (-90 to 90)

minEQ = 7; % Minimum Mw of earthquake
maxEQ = 10; % Maximum Mw of earthquake
mindepth = 0; % Minimum earthquake depth (km)
maxdepth = 9999; % Maximum earthquake depth (km)
sliptype = 'all'; % Earthquake slip type ('all' 'reverse' 'strike-slip' 'normal' 'oblique-reverse' 'oblique-normal')
fashockcheck = 0; % Time period for fore/after shock filtering (days) (e.g. 0 or x or =totalt)
fashockdist = 0; % Distance for fore/after shock filtering (km) (e.g. 1000 or =maxd)

avgEr = 'E'; % How to calculate baseline eruption rate for each earthquake ('A' to use whole database, 'E' to exclude eruptions occuring within 'AvEx' days of earthquakes)
AvEx = 1826; % For avgEr = 'E', eruptions within AvEx days are excluded from the baseline eruption rate calculation (days)

minVEI = 2; % Minimum VEI of eruptions
mult_erups = 'Y'; % Multiple eruptions from 1 volcano allowed within maxt-mint days ('Y' or 'N')
uncert_erups = 'N'; % Uncertain start date eruptions ('N' = exclude uncertain start day eruptions, 'A' = include all eruptions) 
sameday_erups = 'N'; % Eruptions on the same day as the earthquake ('N' = excluded, 'A' = included and assumed to follow the earthquake)

mind = 0; % Minimum distance from earthquake epicentre to volcano (km)
maxd = 750; % Maximum distance from earthquake epicentre to volcano (km). Using 'x WC', where x is a number, will use x * Wells & Coppersmith rupture lengths. Using 'x Mo', where x is a number, will use a value related to distance to stress change decaying with Mo^(1/3) (Marsan 2005, Churchill et al in press)
mint = 0; % Minimum time between earthquakes and eruptions (days)
maxt = 365; % Maximum time between earthquakes and eruptions (days) (Eruption catalogue must backdate to at least first_eq - maxt)

monte_carlo = 1000; % Number of Monte Carlo simulations 
MC_mode = 'Q'; % Monte Carlo simulation mode ('E' to randomise earthquake dates, 'V' to randomise volcanic eruption dates, 'B' to randomise both, 'P' for purmutation test, 'Q' for purmutate volcanic eruptions only, 'X' for random eruptions with recurrence limit, 'Y' for permutate eruptions with recurrence limit, 'Z' to randomise eruption times at each volcano using a random first eruption date then permutating its reccurence times)
erup_lim = 0; % For MC_mode of 'X' and 'Y', the minimum allowed recurrence time between eruptions at any one volcano (set as 0 for no limit)

home_dir= 'C:\Users\ex18983\eqvolc github'; % Home directory for function


% CALCULATION

% Switch to home directory
cd(home_dir)

% Convert date formats to date numbers
first_eq=datenum(first_eq,'dd/mm/yyyy');
first_volc=datenum(first_volc,'dd/mm/yyyy');
last_volc=datenum(last_volc,'dd/mm/yyyy');
% Calculate the latest allowable earthquake date (=last_volc - maxt)
last_eq=last_volc-maxt;
% Calculate length of eruption catalogue
volc_length=last_volc-first_volc+1; % +1 to include the first_volc day

% Extract the desired earthquake events from the earthquake catalogue
[eqs,noeqs]=geteq(DB_inpeqs,lonlims,latlims,first_eq,last_eq,minEQ,maxEQ,mindepth,maxdepth,sliptype,fashockcheck,fashockdist);

% Extract the desired volcanic eruptions from the eruptions catalogue
[volcs,novolcs]=getvolc(lonlims,latlims,first_volc,last_volc,minVEI,DB_inperups,uncert_erups);

% Generate arrays to store output earthquake-volcano relationships
% Each row is for one earthquake
eqvolcdist=zeros(noeqs,novolcs); % Distance between each earthquake (row) and each eruption (col)
triggers=cell(noeqs,3); % Earthquake details, eruptions before, eruptions after (1 row per eq)
E_average_byeq=zeros(noeqs,1); % Average number of eruptions expected (i.e. baseline eruption rate), calculated over whole database (1 row per eq)

% Generate array to store maximum search distances
maxdval=zeros(noeqs,1);

% Fill output earthquake-volcano relationships table for each earthquake
for i=1:noeqs
    % Copy desired earthquake details to output
    triggers{i,1}={datestr(eqs{i,1},'dd/mm/yyyy') eqs{i,2} eqs{i,3} eqs{i,4} eqs{i,5} eqs{i,6} eqs{i,7} eqs{i,8} eqs{i,9} eqs{i,10} eqs{i,11}}; % Earthquake date, lat, lon, depth, Mw, location, slip type, fault plane certainty, strike, dip, SS direction specifier
    % If appropriate, calculate variable maxd using Wells & Coppersmith 
    if ischar(maxd)
        maxdval(i) = calcmaxd(maxd,eqs{i,5});
    else
        maxdval(i)=maxd;
    end
    % Calculate the distance between earthquake and each eruption
    [eqvolcdist(i,:)]=calceqvolcdist(eqs{i,2},eqs{i,3},volcs,novolcs);
    % Extract the eruptions before and after the earthquake
    [triggers{i,2},triggers{i,3},E_average_byeq(i)]=triggering(mind,maxdval(i),mint,maxt,eqs{i,1},last_eq,eqvolcdist(i,:),volcs,mult_erups,sameday_erups,novolcs,volc_length,avgEr,AvEx);
end

% Extract the eruption numbers for each quake and also calculate the total for
% all the earthquakes
E_before_byeq=zeros(noeqs,1); % Eruptions before each earthquake
E_after_byeq=zeros(noeqs,1); % Eruptions after each earthquake
for i=1:noeqs
    E_before_byeq(i)=size(triggers{i,2},1);
    E_after_byeq(i)=size(triggers{i,3},1);
end
% Calculate totals across all earthquakes
E_before=sum(E_before_byeq);
E_after=sum(E_after_byeq);
E_average=sum(E_average_byeq);

% If applicable, begin Monte Carlo simulations with randomised dates
if monte_carlo>0
    
    % Generate arrays to store output earthquake-volcano relationships.
    % Each row is one Monte Carlo simulation run
    E_beforeMC_byeq=zeros(monte_carlo,noeqs); % Eruptions before each earthquake (col) in each simulation (row)
    E_beforeMC=zeros(monte_carlo,1); % Total eruptions before earthquakes from simulations
    E_afterMC_byeq=zeros(monte_carlo,noeqs); % Eruptions after each earthquake (col) in each simulation (row)
    E_afterMC=zeros(monte_carlo,1); % Total eruptions after earthquakes from simulations
    E_averageMC_byeq=zeros(monte_carlo,noeqs); % Average number of eruptions expected for each earthquake (col) in each simulation (row)
    E_averageMC=zeros(monte_carlo,1); % Total average eruptions expected from simulations
    triggersMC=cell(noeqs,3); % Earthquake details, eruptions before, eruptions after (1 row per eq) (will be overwritten each simulation to save memory)
    
    % Set some default values for first MC loop before they are calculated in
    % the first simulation
    no_indvolcs = [];
    indvolcs = [];
    alldates = [];
    
    % Begin Monte Carlo simulation loop
    for i=1:monte_carlo
        
        % Randomise earthquake or eruption time
        [eqs,volcs,indvolcs,no_indvolcs,alldates,eqvolcdist] = randomcat(eqs,noeqs,volcs,novolcs,first_eq,last_eq,first_volc,last_volc,MC_mode,erup_lim,eqvolcdist,indvolcs,no_indvolcs,alldates);
        
        % Fill output earthquake-volcano relationships table for each earthquake
        for j=1:noeqs
            % Copy desired earthquake details to output
            triggersMC{j,1}={datestr(eqs{j,1},'dd/mm/yyyy') eqs{j,2} eqs{j,3} eqs{j,4} eqs{j,5} eqs{j,6}}; % Earthquake date, lat, lon, depth, Mw, location
            % Calculate the eruptions before and after the earthquake
            [triggersMC{j,2},triggersMC{j,3},E_averageMC_byeq(i,j)]=triggering(mind,maxdval(j),mint,maxt,eqs{j,1},last_eq,eqvolcdist(j,:),volcs,mult_erups,sameday_erups,novolcs,volc_length,avgEr,AvEx);
        end
        
        % Extract the eruption numbers for each quake and also calculate
        % total for all the earthquakes
        for j=1:noeqs
            E_beforeMC_byeq(i,j)=size(triggersMC{j,2},1);
            E_afterMC_byeq(i,j)=size(triggersMC{j,3},1);
        end
        E_beforeMC(i)=sum(E_beforeMC_byeq(i,:));
        E_afterMC(i)=sum(E_afterMC_byeq(i,:));
        E_averageMC(i)=sum(E_averageMC_byeq(i,:));
        
    end  
end

% Write output file, close all
overwr='Y';
cd('outputs')
[overwr]=overwrite_check(output_name,overwr);
if overwr=='Y'
    if monte_carlo==0
        save(output_name,'triggers','E_before_byeq','E_before','E_after_byeq','E_after','E_average_byeq','E_average','mint','maxt')
    else
        save(output_name,'triggers','E_before_byeq','E_before','E_after_byeq','E_after','E_average_byeq','E_average','E_beforeMC_byeq','E_beforeMC','E_afterMC_byeq','E_afterMC','E_averageMC_byeq','E_averageMC','mint','maxt')
    end
end
fclose('all');

% Return to home
cd(home_dir)

end