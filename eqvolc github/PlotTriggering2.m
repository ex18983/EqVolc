function PlotTriggering2

% Plots eruption rates associated with large nearby earthquakes, using .mat
% file generated by EruptionTriggering.m

% This function makes plots for multiple sets of input parameters (Min Mw,
% SlipType, MultErups, MaxD, etc) and different time periods before and
% after the earthquakes (Mint,Maxt), making one plot to compare the
% observed factional changes in eruption rates, and a separate plot to
% compare the observed percentiles relative to the Monte Carlo
% simulations. This is for both before vs after, and before and after vs
% average eruption rates.

% Figure 1 - Before vs after eruption rates across all earthquakes
% Figure 2 - Before vs after eruption rates across all earthquakes
%            percentile scores relative to random simulations
% Figure 3 - Before and after rates relative to baseline rate across all
%            earthquakes
% Figure 4 - Before and after rates relative to baseline rate across all
%            earthquakes percentile scores relative to random simulations

% (Format figure legends manually cos too complicated to auto format)


% INPUT

% Cell array of input files. One row per set of input parameters, one
% column per time period (time periods must be the same between each row):
inp_files = {'ET_test_1month','ET_test_3month','ET_test_6month','ET_test_1year','ET_test_2year','ET_test_3year','ET_test_4year','ET_test_5year';...
    'ET_test_1month_shallow','ET_test_3month_shallow','ET_test_6month_shallow','ET_test_1year_shallow','ET_test_2year_shallow','ET_test_3year_shallow','ET_test_4year_shallow','ET_test_5year_shallow'};
%inp_files = {'ET_test_1month','ET_test_3month','ET_test_6month','ET_test_1year','ET_test_2year','ET_test_3year','ET_test_4year','ET_test_5year'};

% Colours and shapes for plotting
plot_col = {[0 0.4470 0.7410] [0.8500 0.3250 0.0980] [0.9290 0.6940 0.1250] [0.4940 0.1840 0.5560] [0.4660 0.6740 0.1880]}; % MATLAB defaults
plot_spec = {'x' 'o' '+' 's' '*'};

% Home directory for function:
home_dir= 'C:\Users\ex18983\eqvolc github';


% CALCULATION

% Switch to home directory
cd(home_dir)

% Determine number of time periods
no_ts = size(inp_files,2);
% Determine number of parameter sets
no_sets = size(inp_files,1);

% Determine numbers of simulations
load(inp_files{1,1});
if exist('E_beforeMC','var')
    no_MCs = size(E_beforeMC,1);
else
    no_MCs = 0;
end

% Pre-allocate arrays to store data
maxts = zeros(1,no_ts); % Time periods
E_befores = zeros(no_sets,no_ts); % Eruptions in the before earthquake periods
E_afters = zeros(no_sets,no_ts); % Eruptions in the after earthquake periods
E_averages = zeros(no_sets,no_ts); % Average eruptions over the whole database in the time period
delta_AB = zeros(no_sets,no_ts); % Rate after earthquake relative to before
delta_Bavg = zeros(no_sets,no_ts); % Rate before earthquake relative to average
delta_Aavg = zeros(no_sets,no_ts); % Rate after earthquake relative to average
P_ABmin = zeros(no_sets,no_ts); % Probability of non-exceedance after earthquake relative to before (Lower bound due to MC simulations with same value)
P_Bavgmin = zeros(no_sets,no_ts); % Probability of non-exceedance before earthquake relative to average (Lower bound due to MC simulations with same value)
P_Aavgmin = zeros(no_sets,no_ts); % Probability of non-exceedance after earthquake relative to average (Lower bound due to MC simulations with same value)
P_ABmax = zeros(no_sets,no_ts); % Probability of non-exceedance after earthquake relative to before (Upper bound due to MC simulations with same value)
P_Bavgmax = zeros(no_sets,no_ts); % Probability of non-exceedance before earthquake relative to average (Upper bound due to MC simulations with same value)
P_Aavgmax = zeros(no_sets,no_ts); % Probability of non-exceedance after earthquake relative to average (Upper bound due to MC simulations with same value)
P_ABmed = zeros(no_sets,no_ts); % Probability of non-exceedance after earthquake relative to before (Average of min and max probabilities)
P_Bavgmed = zeros(no_sets,no_ts); % Probability of non-exceedance before earthquake relative to average (Average of min and max probabilities)
P_Aavgmed = zeros(no_sets,no_ts); % Probability of non-exceedance after earthquake relative to average (Average of min and max probabilities)

% Run loop calculating changes in eruption rates and their significance
for i = 1 : no_sets
    for j = 1 : no_ts
        
        % Load input file
        load(inp_files{i,j});
        
        % Extract time period for plotting
        if i == 1
            maxts(j) = maxt;
        end
        
        % Extract total eruption numbers (mainly for checking / manual
        % investigation)
        E_befores(i,j) = E_before;
        E_afters(i,j) = E_after;
        E_averages(i,j) = E_average;
        
        % Calculate relative eruption rates
        delta_AB(i,j) = E_after / E_before;
        delta_Bavg(i,j) = E_before / E_average;
        delta_Aavg(i,j) = E_after / E_average;
        
        % Calculate simulated relative eruption rates
        if no_MCs > 0
            delta_ABMC = E_afterMC ./ E_beforeMC;
            delta_BavgMC = E_beforeMC ./ E_averageMC;
            delta_AavgMC = E_afterMC ./ E_averageMC;
        end
        
        % Change Inf and Nan values for plotting and prctile calculation
        pdelta_AB = delta_AB;
        pdelta_AB(delta_AB==Inf) = 99999999999999999999999; % Replace to allow prctile calculation
        pdelta_AB(isnan(delta_AB)) = -99999999999999999999999; % Replace to allow prctile calculation
        if no_MCs > 0
            pdelta_ABMC = delta_ABMC;
            pdelta_ABMC(delta_ABMC==Inf) = 99999999999999999999999;
            pdelta_ABMC(isnan(delta_ABMC)) = -99999999999999999999999;
        end
        
        % Calculate significance of change in eruption numbers, relative to
        % the Monte Carlo simulations
        if no_MCs > 0
            [P_ABmin(i,j),P_ABmed(i,j),P_ABmax(i,j)] = alexinvprctile(pdelta_ABMC,pdelta_AB(i,j));
            [P_Bavgmin(i,j),P_Bavgmed(i,j),P_Bavgmax(i,j)] = alexinvprctile(delta_BavgMC,delta_Bavg(i,j));
            [P_Aavgmin(i,j),P_Aavgmed(i,j),P_Aavgmax(i,j)] = alexinvprctile(delta_AavgMC,delta_Aavg(i,j));
        end
        
    end
end

% Join before and after rates and significances for plotting
maxts_AB = [-flip(maxts) maxts];
delta_ABavg = [flip(delta_Bavg,2) delta_Aavg];
if no_MCs > 0
    P_ABavgmin = [flip(P_Bavgmin,2) P_Aavgmin];
    P_ABavgmax = [flip(P_Bavgmax,2) P_Aavgmax];
    P_ABavgmed = [flip(P_Bavgmed,2) P_Aavgmed];
end

% Calculate 'error bars' to show clustering in the MC simulated data and 
% subsequent percentiles (Pmax and Pmin as error bars with Pmed as points)
if no_MCs > 0
    P_ABpos = P_ABmax - P_ABmed;
    P_ABneg = P_ABmed - P_ABmin;
    P_ABavgpos = P_ABavgmax - P_ABavgmed;
    P_ABavgneg = P_ABavgmed - P_ABavgmin;
end

% Fudge to deal with any eruption rates greater than 2 ruining my nice
% plot (plots them at 2.1 with a label for their actual change)
cond1 = delta_AB > 2.1;
loc1 = find(cond1);
vals1 = delta_AB(cond1);
vals1 = round(vals1);
delta_AB(cond1) = 2.1;
cond2 = delta_ABavg > 2.1;
loc2 = find(cond2);
vals2 = delta_ABavg(cond2);
vals2 = round(vals2);
delta_ABavg(cond2) = 2.1;

%Plot figures
a = figure(1);
a.Units = 'normalized';
a.Position = [0 0.2083 0.7495 0.5833];
%hold off
plot(maxts,delta_AB(1,:),'Color',plot_col{1},'Marker',plot_spec{1},'LineWidth',1)
hold on
for i = 2 : no_sets
    plot(maxts,delta_AB(i,:),'Color',plot_col{i},'Marker',plot_spec{i},'LineWidth',1)
end
xlabel('Time after earthquake (days)')
ylabel({'Relative eruption rate'; '(\Delta A \\ \Delta B)'})
xlim([0 maxts(end)])
ylim([0 2.1]);
a1=gca;
a1.Position = [0.1300 0.1192 0.7750 0.8058];
a1.FontSize=12;
a1.LineWidth=0.75;
%legend('Total')
%legend('All','Reverse','Normal','Strike-Slip')
%legend('M_w \geq 6','M_w \geq 7','M_w \geq 8')
legend('All','Z < 70 km','Z \geq 70 km')
%legend('250 km','500 km','1000 km','2000 km')
line([maxts_AB(1) maxts_AB(end)],[1 1],'Color',[0 0 0],'HandleVisibility','off')
if isempty(loc1) == 0
    for i = 1 : length(loc1)
        text(maxts(ceil(loc1(i)/no_sets)),114,num2str(vals1(i)),'HorizontalAlignment','center')
    end
end
a1.YTick = [0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2 2.1];
a1.YTickLabel{end} = '>2';
a1.XTick = [0 365 730 1096 1461 1826];
a1.XAxisLocation = 'top';

b = figure(2);
b.Units = 'normalized';
b.Position = [0 0.2083 0.7495 0.5833];
%hold off
errorbar(maxts,P_ABmed(1,:),P_ABneg(1,:),P_ABpos(1,:),'Color',plot_col{1},'Marker',plot_spec{1},'LineWidth',0.5)
hold on
for i = 2 : no_sets
    errorbar(maxts,P_ABmed(i,:),P_ABneg(i,:),P_ABpos(i,:),'Color',plot_col{i},'Marker',plot_spec{i},'LineWidth',0.5)
end
% Trick to plot points over error bars
for i = 1 : no_sets
    plot(maxts,P_ABmed(i,:),'Color',plot_col{i},'Marker',plot_spec{1},'LineWidth',1,'HandleVisibility','off')
end
xlabel('Time after earthquake (days)')
ylabel({'Percentile relative to simulations'; '(\Delta A \\ \Delta B)'})
xlim([0 maxts(end)])
ylim([0 100]);
b1=gca;
b1.Position = [0.1300 0.1192 0.7750 0.8058];
b1.FontSize=12;
b1.LineWidth=0.75;
%legend('Total')
%legend('All','Reverse','Normal','Strike-Slip')
%legend('M_w \geq 6','M_w \geq 7','M_w \geq 8')
legend('All','Z < 70 km','Z \geq 70 km')
%legend('250 km','500 km','1000 km','2000 km')
line([maxts_AB(1) maxts_AB(end)],[50 50],'Color',[0 0 0],'HandleVisibility','off')
b1.YTick = [0 10 20 30 40 50 60 70 80 90 100];
b1.YTickLabel{end} = '>100';
b1.XTick = [0 365 730 1096 1461 1826];

c = figure(3);
c.Units = 'normalized';
c.Position = [0 0.2083 0.7495 0.5833];
%hold off
plot(maxts_AB,delta_ABavg(1,:),'Color',plot_col{1},'Marker',plot_spec{1},'LineWidth',1)
hold on
for i = 2 : no_sets
    plot(maxts_AB,delta_ABavg(i,:),'Color',plot_col{i},'Marker',plot_spec{i},'LineWidth',1)
end
xlabel('Time relative to earthquake (days)')
ylabel({'Relative eruption rate'; '(\Delta (B,A))'})
xlim([-maxts(end) maxts(end)])
ylim([0 2.1]);
c1=gca;
c1.Position = [0.1300 0.1192 0.7750 0.8058];
c1.FontSize=12;
c1.LineWidth=0.75;
%legend('Total')
%legend('6 \leq M_w < 7','7 \leq M_w < 8','M_w \geq 8')
%legend('Permutation','Permutation 91','Permutation 365','Random')
%legend('Uncertain date eruptions included','Uncertain date eruptions excluded')
%legend('Repeat eruptions included','Repeat eruptions excluded')
%legend('Multiple + certain','Once + certain','Once + all','Multiple + all')
%legend('VEI \geq 0','VEI \geq 2','VEI \geq 3')
%legend('No filtering','750 km + 14 days','750 km + t days')
legend('All earthquakes','Shallow earthquakes','Deep earthquakes')
%legend('Reverse','Normal','Strike-Slip')
%legend('Shallow reverse','Shallow normal','Shallow strike-Slip')
%legend('0-250 km','250-500 km','500-750 km','750-1000 km')
line([maxts_AB(1) maxts_AB(end)],[1 1],'Color',[0 0 0],'LineWidth',0.5,'HandleVisibility','off')
line([0 0],[0 3],'Color',[0 0 0],'LineWidth',0.5,'HandleVisibility','off')
if isempty(loc2) == 0
    for i = 1 : length(loc2)
        text(maxts_AB(ceil(loc2(i)/no_sets)),114,num2str(vals2(i)),'HorizontalAlignment','center')
    end
end
c1.YTick = [0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2 2.1];
c1.YTickLabel{end} = '>2';
c1.XTick = [-1826 -1461 -1096 -730 -365 0 365 730 1096 1461 1826];
c1.XAxisLocation = 'top';
c1.YAxisLocation = 'left';

d = figure(4);
d.Units = 'normalized';
d.Position = [0 0.2083 0.7495 0.5833];
%hold off
errorbar(maxts_AB,P_ABavgmed(1,:),P_ABavgneg(1,:),P_ABavgpos(1,:),'Color',plot_col{1},'Marker',plot_spec{1},'LineWidth',0.5)
hold on
for i = 2 : no_sets
    errorbar(maxts_AB,P_ABavgmed(i,:),P_ABavgneg(i,:),P_ABavgpos(i,:),'Color',plot_col{i},'Marker',plot_spec{i},'LineWidth',0.5)
end
% Trick to plot points over error bars
for i = 1 : no_sets
    plot(maxts_AB,P_ABavgmed(i,:),'Color',plot_col{i},'Marker',plot_spec{1},'LineWidth',1,'HandleVisibility','off')
end
xlabel('Time relative to earthquake (days)')
ylabel('Percentile score relative to simulations')
xlim([-maxts(end) maxts(end)])
ylim([0 100]);
d1=gca;
d1.Position = [0.1300 0.1192 0.7750 0.8058];
d1.FontSize=12;
d1.LineWidth=0.75;
%legend('Total')
%legend('6 \leq M_w < 7','7 \leq M_w < 8','M_w \geq 8')
%legend('Permutation','Permutation 91','Permutation 365','Random')
%legend('Multiple + certain','Multiple + all')
%legend('Multiple + certain','Once + certain')
%legend('Multiple + certain','Once + certain','Once + all','Multiple + all')
%legend('VEI \geq 0','VEI \geq 2','VEI \geq 3')
%legend('No filtering','750 km + 14 days','750 km + t days')
legend('All','Z < 70 km','Z \geq 70 km')
%legend('Reverse','Normal','Strike-Slip')
%legend('0-250 km','250-500 km','500-750 km','750-1000 km')
line([maxts_AB(1) maxts_AB(end)],[50 50],'Color',[0 0 0],'LineWidth',0.5,'HandleVisibility','off')
line([0 0],[0 100],'Color',[0 0 0],'LineWidth',0.5,'HandleVisibility','off')
d1.YTick =[0 10 20 30 40 50 60 70 80 90 100 110];
d1.XTick = [-1826 -1461 -1096 -730 -365 0 365 730 1096 1461 1826];
d1.XAxisLocation = 'bottom';
d1.YAxisLocation = 'left';

end